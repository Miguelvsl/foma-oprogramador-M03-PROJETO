# -*- coding: utf-8 -*-
"""M03-PROJETO.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dp8TlAbBBMhEdxRTaQJ5ooMwwZuRgSJK

# Sistema Bancário


 Crie uma lógica para simular um fluxo de um sistema bancário.

  Esse ***programa deverá ter:***

1- Um menu com seleção de operação

2- Criação de contas

3- Remoção de contas

4- Listagem de todas as contas criadas

5- Adicionar saldo/ remover saldo

6- transferir valor entre contas

7- Consultar saldo de uma conta específica


 As contas devem ser armazenadas em uma lista e cada conta deve ser um dicionário (chave-valor) contendo as seguintes frases:

1- numero_conta

2- saldo_conta
"""

contas = []

def criar_conta():
   verificador_conta_existe = False
   dados_nova_conta = {}
   dados_nova_conta ['numero_conta'] = input('digite o numero da nova conta\n>>>  ')

   for conta_em_consulta in contas:
     if conta_em_consulta ['numero_conta'] == dados_nova_conta ['numero_conta']:
      verificador_conta_existe = True
      break

   if verificador_conta_existe == True:
    print('\nO numero de conta já existe. Tente novamente.')
   else:
      dados_nova_conta ['saldo_conta'] = float (input('Digite o saldo da nova conta\n>>>  '))
      contas.append(dados_nova_conta)
      print("\nOperação foi efetuada com sucesso.")


def remover_conta():
   numero_conta = input('Digite o numero da conta para remover\n>>>  ')
   conta_encontrada = False
   for conta_em_consulta in contas:
      if conta_em_consulta ['numero_conta'] == numero_conta:
        conta_encontrada = True
        contas.remove(conta_em_consulta)
        print('\nOperação efetuada com sucesso')
        break
      if not conta_encontrada:
        print('\nO numero da conta não existe. tente novamente')

def listar_contas ():
    if len(contas) == 0:
      print ("\nNão há contas cadastradas")
    else:
      index = 1
      for conta_em_consulta in contas:
        if conta_em_consulta ['saldo_conta'] >= 0:
          status = 'positivo'
        else:
            status = "negativo"
        print(f'{index} - Numero de conta:{conta_em_consulta ["numero_conta"]} // Saldo da conta: R$ {conta_em_consulta["saldo_conta"]:.2f} ({status}) ')
        index += 1

def adiconar_saldo_em_contas ():
  numero_conta = input('\nDigite o o numero da conta' )
  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == numero_conta:
      valor_de_credito =float(input('\nDigite o valor do crédito:\n>>>  R$'))
      if valor_de_credito < 0:
        print ('\nValores negativos não são aceitos. tente novamente')
        return
      else:
        conta_em_consulta ['saldo_conta'] += valor_de_credito
        print ('\nOperação efetuada com sucesso')
        return
  print('\nO numero da conta não foi encontrado. tente novamente.')

def remover_saldo_em_contas ():
  numero_conta = input('\nDigite o o numero da conta\n>>> ' )
  for conta_em_consulta in contas:
    if conta_em_consulta ['numero_conta'] == numero_conta:
      valor_de_debito =float(input('\nDigite o valor do debito:\n>>>  R$'))
      if valor_de_debito < 0:
        print ('\nValores negativos não são aceitos. tente novamente')
        return
      else:
        conta_em_consulta ['saldo_conta'] -= valor_de_debito
        print ('\nOperação efetuada com sucesso')
        return
  print('\nO numero da conta não foi encontrado. tente novamente.')

def transferir_saldo_entre_contas():
  conta_partida = input('\nDigite o numero da sua conta\n>>>  .')
  verificador_etapa = 0
  for conta_em_consulta in contas:
    if conta_em_consulta["numero_conta"]== conta_partida:
      verificador_etapa = 1
      conta_destino = input("\nDigite o numero da conta destino:\n>>>  ")
      if conta_destino != conta_partida:

        for conta_destino_em_consulta in contas:
          if conta_destino_em_consulta ["numero_conta"] == conta_destino:
            verificador_etapa = 3
            valor_de_transferencia = float (input("Digite o valor de transferencia:\n>>>   R$"))
            if valor_de_transferencia > conta_em_consulta["saldo_conta"]:
              print ("\nNão é possivel transferir um valor maior que seu saldo.")
              break
            elif valor_de_transferencia < 0 :
              print("\nNão é possivel transferir um valor negativo")
              break
            else:
              conta_em_consulta ["saldo_conta"] -= valor_de_transferencia
              conta_destino_em_consulta ["saldo_conta"] += valor_de_transferencia
              print ("\nOperação efetuada com sucesso.")
              break

      else:
        verificador_etapa =2
        break

  if verificador_etapa == 0:
    print ("\nA sua conta não foi encontrada. tente novamente.")
  elif verificador_etapa == 1:
    print ("\nA conta destino não foi encontrada. tente novamente")
  elif verificador_etapa == 2:
    print("\nNão é possivel transferir dinheiro para a mesma conta.")

def consultar_saldo_de_conta ():
  numero_conta = input ("Digite o numero da conta que quer consultar saldo.\n>>> ")
  for conta_em_consulta in contas:
    if conta_em_consulta ["numero_conta"] == numero_conta:
       if conta_em_consulta ['saldo_conta'] >= 0:
          status = 'positivo'
       else:
        status = "negativo"
       print(f"\nO saldo da conta é: R$ {conta_em_consulta ['saldo_conta']:.2f} ({status})")
       return
  print("\nO numero da conta não foi encontrado. tente novamente.")




print('>>> Bem vindo ao sistema bancário <<<')

while True:
  print('\n###  menu  ###')
  print('0 - sair ')
  print('1 - Criar uma nova conta')
  print('2 - Remover uma conta')
  print('3 - Listar todas as contas')
  print('4 - Adiconar Saldo (creditar)')
  print('5 - Remover Saldo (debitar) ')
  print('6 - Transferir valor entre contas ')
  print('7 - consultar saldo de uma conta ')
  numero_operação = input("Selecione a operação que deseja realizar:\n>>>  ")

  if numero_operação == "0":
    print ('\nsistema encerrado')
    break

  elif numero_operação == "1":
    criar_conta ()

  elif numero_operação == "2":
    remover_conta ()

  elif numero_operação == "3":
    listar_contas ()

  elif numero_operação == "4":
    adiconar_saldo_em_contas ()

  elif numero_operação == "5":
    remover_saldo_em_contas ()

  elif numero_operação == "6":
    transferir_saldo_entre_contas ()

  elif numero_operação == "7":
    consultar_saldo_de_conta ()


  else:
    print ('\noperação invalida')